{"version":3,"sources":["routes/index/index.js","routes/about/about.js","components/Footer/Footer.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","About","Footer","this","props","title","href","Component","Header","navLinks","map","element","key","to","page","text","App","basename","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6SAiDeA,MA/Cf,WACC,OACC,yBAAKC,UAAU,QAEd,yBAAKA,UAAU,WACd,2BAAOA,UAAU,WAChB,0CACA,4CACA,4BACC,yCACA,qCACA,mDACA,mCACA,0CACA,sCACA,8CACA,2CAED,2CACA,4BACC,sCACA,iDACA,qCACA,mCACA,2CAGF,6BAASA,UAAU,QAClB,2CACA,+CACA,oHAGA,4QAKA,+JC6BUC,MAnEf,WACC,OACC,yBAAKD,UAAU,SAEd,yBAAKA,UAAU,WACd,2BAAOA,UAAU,WAChB,4CACA,yCACA,4BACC,0CACA,qCACA,6CAED,wCACA,4BACC,mDACA,+CACA,6CACA,yCACA,0EAGF,6BAASA,UAAU,QAClB,+CACA,0EACA,kIAGA,wCACA,uIAIA,wPAMA,8GAGA,4CACA,0QAMA,yKAIA,4BACC,+DACA,qDACA,0DACA,oDACA,wDACA,gGC5CSE,E,iLAbb,OACC,gCACC,4BAAKC,KAAKC,MAAMC,OAChB,iFAC2D,uBAAGC,KAAK,sDAAR,2B,GAN1CC,aCmBNC,E,iLAfb,OACC,gCACC,6BACC,4BACEL,KAAKC,MAAMK,SAASC,KAAI,SAACC,EAASC,GAClC,OAAQ,wBAAIA,IAAKA,GAAK,kBAAC,IAAD,CAAMC,GAAIF,EAAQG,MAAOH,EAAQI,YAI1D,uBAAGT,KAAK,iCAAgC,gD,GAXvBC,aCmCNS,E,iLAxBb,OACC,kBAAC,IAAD,CAAYC,SAAS,KACpB,yBAAKjB,UAAU,OACd,yBAAKA,UAAU,WACd,kBAAC,EAAD,CACCS,SAAU,CACT,CAACK,KAAM,IAAKC,KAAM,QAClB,CAACD,KAAM,SAAUC,KAAM,YAGzB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWlB,IAChC,kBAAC,IAAD,CAAOiB,KAAK,IAAIC,UAAWpB,KAE5B,kBAAC,EAAD,CACCM,MAAM,sB,GAjBKE,aCDEa,QACU,cAA7BC,OAAOC,SAASC,UAEgB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2DCZLC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAClCA,EAAaC,kB","file":"static/js/main.75a77a88.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Home() {\n\treturn (\n\t\t<div className=\"Home\">\n  \n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<aside className=\"sidebar\">\n\t\t\t\t\t<h3>Key Skills</h3>\n\t\t\t\t\t<h4>DevOps/Cloud</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Terraform</li>\n\t\t\t\t\t\t<li>Azure</li>\n\t\t\t\t\t\t<li>Azure ARM Templates</li>\n\t\t\t\t\t\t<li>AWS</li>\n\t\t\t\t\t\t<li>Networking</li>\n\t\t\t\t\t\t<li>Docker</li>\n\t\t\t\t\t\t<li>Docker Compose</li>\n\t\t\t\t\t\t<li>Kubernetes</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h4>Development</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Python</li>\n\t\t\t\t\t\t<li>Javascript/NodeJs</li>\n\t\t\t\t\t\t<li>React</li>\n\t\t\t\t\t\t<li>TDD</li>\n\t\t\t\t\t\t<li>Rest APIs</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</aside>\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<h2>Ewan Forbes</h2>\n\t\t\t\t\t<h3>DevOps Engineer</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHello. I'm Ewan Forbes, an experienced DevOps engineer currently working from Dundee.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThere's nothing I enjoy more than learning a new technology or skill.\n\t\t\t\t\t\tThis has given me a wide range of knowledge across all stages of the development lifecycle.\n\t\t\t\t\t\tWith my endless curiosity for IT, I'll continue learning and experimenting.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPlease, feel free to have a browse. There is everything from JavaScript browser games, nodejs rest apis with tdd and docker.  \n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;","import React from 'react';\n\nfunction About() {\n\treturn (\n\t\t<div className=\"About\">\n  \n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<aside className=\"sidebar\">\n\t\t\t\t\t<h3>Technologies</h3>\n\t\t\t\t\t<h4>Front End</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Javascript</li>\n\t\t\t\t\t\t<li>React</li>\n\t\t\t\t\t\t<li>GitHub Pages</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h4>CI Build</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>With GitHub Actions</li>\n\t\t\t\t\t\t<li>Pull dev branch</li>\n\t\t\t\t\t\t<li>Check linting</li>\n\t\t\t\t\t\t<li>Run tests</li>\n\t\t\t\t\t\t<li>Publish to git hub pages (master branch)</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</aside>\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<h2>About This Site</h2>\n\t\t\t\t\t<p>I didn't want a plain old static HTML site!</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tUsing react, react-router-dom and GitHub actions, I've created something a little more interesting.\n\t\t\t\t\t</p>\n\t\t\t\t\t<h3>The Code</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSo, I've used node js targeting version 10.x.\n\t\t\t\t\t\tThe react project gets built and deployed to GitHub pages.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis site is made with the help of react. \n\t\t\t\t\t\tReact-router-dom provides routing between different pages. \n\t\t\t\t\t\tI've chosen hashrouter specifically for this.\n\t\t\t\t\t\tRoutes are separated out to their own folder in the repository source.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tHaving already been very familiar with node js and react, it was a fun project.\n\t\t\t\t\t</p>\n\t\t\t\t\t<h3>The Pipeline</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe pipeline I created using GitHub actions.\n\t\t\t\t\t\tI recently stumbled onto this and immediately wanted to learn to use it.\n\t\t\t\t\t\tBefore, I had been using a Raspberry PI with jenkins installed.\n\t\t\t\t\t\tIt is great having such a CI tool available for free.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tA good pipeline setup automates boring, time consuming manual tasks and eliminates the possibility of human error.\n\t\t\t\t\t\tHere is what mine does:\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Triggered on push to dev branch</li>\n\t\t\t\t\t\t<li>Installs npm packages</li>\n\t\t\t\t\t\t<li>Checks linting with eslint</li>\n\t\t\t\t\t\t<li>Runs component tests</li>\n\t\t\t\t\t\t<li>Builds the react project</li>\n\t\t\t\t\t\t<li>Deploys to the master branch which GitHub pages serves from</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default About;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<footer>\n\t\t\t\t<h3>{this.props.title}</h3>\n\t\t\t\t<p>\n            This site is made with react and react-router-dom. <a href=\"https://github.com/redemptive/redemptive.github.io\">\n            See the code here\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\nexport default Footer;","import React, {Component} from 'react';\n\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.props.navLinks.map((element, key) => {\n\t\t\t\t\t\t\treturn (<li key={key}><Link to={element.page}>{element.text}</Link></li>);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t\t<a href=\"https://github.com/redemptive\"><button>GitHub</button></a>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\n// Routes\nimport Home from './routes/index/index';\nimport About from './routes/about/about';\n\n// Components\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<div className=\"Content\">\n\t\t\t\t\t\t<Header \n\t\t\t\t\t\t\tnavLinks={[\n\t\t\t\t\t\t\t\t{page: '/', text: 'Home'},\n\t\t\t\t\t\t\t\t{page: '/about', text: 'About'}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t\t<Route path=\"/\" component={Home} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Footer \n\t\t\t\t\t\t\ttitle=\"Tf-scripts\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}